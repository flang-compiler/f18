#!/usr/bin/env bash
# Copyright (c) 2018-2019, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Test Fortran expression lowering by driving compilations
# and executions of programs generated by expr-test-generation.cc
#   usage: cmd llvm_build_directory

LLVM=$1
BBC=$LLVM/bin/bbc
LLC=$LLVM/bin/llc
CPP=g++
FCC=pgfortran # So far, only works with pgfortran because of pgmath linking.
FCC_OPTIONS="-Kieee" # That is required because bit to bit compare so far.
SRC=$PWD/expr-test-generator.cc

function die {
  echo "$(basename $0): $*" >&2
  exit 1
}

temp=`mktemp -d ./tmp.XXXXXX`
cd $temp
[[ $KEEP ]] || trap "cd .. && rm -rf $temp" EXIT

testGen=./genTests
testFile=test.f90
driverFile=driver.f90
bbcLog=bbc.log
assembly=a.s
testObject=test.o
testExec=./test_exec
testLog=test.log

$CPP $SRC -std=c++17 -o $testGen
[[ $? -ne 0 ]] && die "test generator compilation failure"
$testGen 1>$testFile 2>$driverFile
[[ $? -ne 0 ]] && die "test generation failure"
$BBC $testFile 2>$bbcLog
[[ $? -ne 0 ]] && die "bbc test.f90 compilation failure"
$LLC a.ll -o $assembly
[[ $? -ne 0 ]] && die "llc failed compiling bbc output"
as $assembly -o $testObject
[[ $? -ne 0 ]] && die "as failed compiling llc output"
$FCC $testObject $driverFile -o $testExec $FCC_OPTIONS
[[ $? -ne 0 ]] && die "driver.f90 compilation/linking failure"
$testExec > $testLog
result=$?
cat $testLog
if [ $result -ne 0 ]; then
  echo "FAIL"
else
  echo "PASS"
fi
